{"map":"{\"version\":3,\"sources\":[\"/home/tianyu/tsprogram/src/Form.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"redux_form_1\",\"exports\",\"default\",\"reduxForm\",\"form\",\"props\",\"handleSubmit\",\"pristine\",\"reset\",\"submitting\",\"createElement\",\"onSubmit\",\"Field\",\"name\",\"component\",\"type\",\"label\",\"disabled\",\"onClick\"],\"mappings\":\"qGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,IAsDAE,EAAAC,QAAeF,EAAAG,WACXC,KAAM,QADKJ,CAdDK,IACV,MAAMC,aAAEA,EAAYC,SAAEA,EAAQC,MAAEA,EAAKC,WAAEA,GAAeJ,EACtD,OACIP,EAAAY,cAAA,QAAMC,SAAYL,GACdR,EAAAY,cAACV,EAAAY,OAAMC,KAAO,OAAOC,UAAY,QAAQC,KAAO,OAAOC,MAAQ,SAC/DlB,EAAAY,cAACV,EAAAY,OAAMC,KAAO,QAAQC,UAAY,QAAQC,KAAO,QAAQC,MAAQ,UACjElB,EAAAY,cAAA,MAAA,KACIZ,EAAAY,cAAA,UAAQK,KAAO,SAASE,SAAYR,GAAU,UAC9CX,EAAAY,cAAA,UAAQK,KAAO,SAASE,SAAYV,GAAYE,EAAYS,QAAWV,GAAK\",\"sourcesContent\":[\"import * as React from 'react';\\nimport { Field, reduxForm } from 'redux-form';\\n/*\\nconst validate = (values: any) => {\\n    const errors = {\\n        username: '',\\n        email: ''\\n    }\\n    if(!values.username) {\\n        errors.username = 'Required'\\n    } else if(values.username.length > 15) {\\n        errors.username = 'Must be 15 charactors or less'\\n    }\\n    if(!values.email) {\\n        errors.email = 'Required'\\n    } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}$/i.test(values.email)) {\\n        errors.email = 'Invalid email address'\\n    }\\n    return errors\\n}\\n\\nconst warn = (values: any) => {\\n    const warnings = {\\n        username: ''\\n    }\\n    if(values.username.length > 10) {\\n        warnings.username = 'May be too long for you to remember'\\n    }\\n    return warnings\\n}\\n\\nconst renderField = (field: any) => (\\n    <div>\\n        <label>{field.label}</label>\\n        <div>\\n            <input {...field.input} placeholder = {field.label} type = {field.type} />\\n            {field.meta.touched && ((field.meta.error && <span>{field.meta.error}</span>) || (field.meta.warning && <span>{field.meta.warning}</span>))}\\n        </div>\\n    </div>\\n)\\n*/\\nconst Form = (props: any) => {\\n    const { handleSubmit, pristine, reset, submitting } = props;\\n    return(\\n        <form onSubmit = {handleSubmit}>\\n            <Field name = \\\"name\\\" component = \\\"input\\\" type = \\\"text\\\" label = \\\"Name\\\" />\\n            <Field name = \\\"email\\\" component = \\\"input\\\" type = \\\"email\\\" label = \\\"Email\\\" />\\n            <div>\\n                <button type = \\\"submit\\\" disabled = {submitting}>Submit</button>\\n                <button type = \\\"button\\\" disabled = {pristine || submitting} onClick = {reset}>Clear Values</button>\\n            </div>\\n        </form>\\n    )\\n}\\n\\nexport default reduxForm({\\n    form: 'test',\\n\\n})(Form);\"]}","code":"webpackHotUpdate(0,{58:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const l=n(1),a=n(19);t.default=a.reduxForm({form:\"test\"})(e=>{const{handleSubmit:t,pristine:n,reset:m,submitting:i}=e;return l.createElement(\"form\",{onSubmit:t},l.createElement(a.Field,{name:\"name\",component:\"input\",type:\"text\",label:\"Name\"}),l.createElement(a.Field,{name:\"email\",component:\"input\",type:\"email\",label:\"Email\"}),l.createElement(\"div\",null,l.createElement(\"button\",{type:\"submit\",disabled:i},\"Submit\"),l.createElement(\"button\",{type:\"button\",disabled:n||i,onClick:m},\"Clear Values\")))})}});","extractedComments":[]}