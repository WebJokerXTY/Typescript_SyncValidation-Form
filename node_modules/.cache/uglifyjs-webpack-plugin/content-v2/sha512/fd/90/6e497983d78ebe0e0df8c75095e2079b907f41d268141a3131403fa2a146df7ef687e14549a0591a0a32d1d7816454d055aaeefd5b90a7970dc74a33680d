{"map":"{\"version\":3,\"sources\":[\"/home/tianyu/tsprogram/src/index.tsx\",\"/home/tianyu/tsprogram/src/Form.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"ReactDOM\",\"react_redux_1\",\"store_1\",\"showResults_1\",\"Form_1\",\"render\",\"createElement\",\"Provider\",\"store\",\"default\",\"style\",\"padding\",\"onSubmit\",\"document\",\"getElementById\",\"redux_form_1\",\"renderField\",\"field\",\"label\",\"Object\",\"assign\",\"input\",\"placeholder\",\"type\",\"meta\",\"touched\",\"error\",\"warning\",\"exports\",\"reduxForm\",\"form\",\"validate\",\"values\",\"errors\",\"name\",\"email\",\"length\",\"test\",\"warn\",\"warnings\",\"username\",\"props\",\"handleSubmit\",\"pristine\",\"reset\",\"submitting\",\"Field\",\"component\",\"disabled\",\"onClick\"],\"mappings\":\"qGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,IACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,IACAI,EAAAJ,EAAA,IACAK,EAAAL,EAAA,IAEAC,EAASK,OACLP,EAAAQ,cAACL,EAAAM,UAASC,MAASN,EAAAO,SACfX,EAAAQ,cAAA,OAAKI,OAAWC,QAAS,KACrBb,EAAAQ,cAAA,KAAA,KAAA,eACAR,EAAAQ,cAACF,EAAAK,SAAKG,SAAYT,EAAAM,YAG1BI,SAASC,eAAe,2FCd5B,MAAAhB,EAAAC,EAAA,GACAgB,EAAAhB,EAAA,IA8BMiB,EAAeC,GACjBnB,EAAAQ,cAAA,MAAA,KACIR,EAAAQ,cAAA,QAAA,KAAQW,EAAMC,OACdpB,EAAAQ,cAAA,MAAA,KACIR,EAAAQ,cAAA,QAAAa,OAAAC,UAAWH,EAAMI,OAAOC,YAAeL,EAAMC,MAAOK,KAAQN,EAAMM,QACjEN,EAAMO,KAAKC,UAAaR,EAAMO,KAAKE,OAAS5B,EAAAQ,cAAA,OAAA,KAAOW,EAAMO,KAAKE,QAAmBT,EAAMO,KAAKG,SAAW7B,EAAAQ,cAAA,OAAA,KAAOW,EAAMO,KAAKG,YAqBtIC,EAAAnB,QAAeM,EAAAc,WACXC,KAAM,OACNC,SAxDcC,IACd,MAAMC,GACFC,KAAM,GACNC,MAAO,IAYX,OAVIH,EAAOE,KAEDF,EAAOE,KAAKE,OAAS,KAC3BH,EAAOC,KAAO,iCAFdD,EAAOC,KAAO,WAIdF,EAAOG,MAEA,4CAA4CE,KAAKL,EAAOG,SAC/DF,EAAOE,MAAQ,yBAFfF,EAAOE,MAAQ,WAIZF,GA0CPK,KAvCUN,IACV,MAAMO,GACFC,SAAU,IAKd,OAHGR,EAAOQ,SAASJ,OAAS,KACxBG,EAASC,SAAW,uCAEjBD,IA6BIxB,CAhBD0B,IACV,MAAMC,aAAEA,EAAYC,SAAEA,EAAQC,MAAEA,EAAKC,WAAEA,GAAeJ,EACtD,OACI3C,EAAAQ,cAAA,QAAMM,SAAY8B,GACd5C,EAAAQ,cAAA,MAAA,KACIR,EAAAQ,cAACS,EAAA+B,OAAMZ,KAAO,OAAOa,UAAa/B,EAAaO,KAAO,OAAOL,MAAQ,SACrEpB,EAAAQ,cAACS,EAAA+B,OAAMZ,KAAO,QAAQa,UAAa/B,EAAaO,KAAO,QAAQL,MAAQ,WAE3EpB,EAAAQ,cAAA,MAAA,KACIR,EAAAQ,cAAA,UAAQiB,KAAO,SAASyB,SAAYH,GAAU,UAC9C/C,EAAAQ,cAAA,UAAQiB,KAAO,SAASyB,SAAYL,GAAYE,EAAYI,QAAWL,GAAK\",\"sourcesContent\":[\"import * as React from \\\"react\\\";\\nimport * as ReactDOM from \\\"react-dom\\\";\\nimport { Provider } from \\\"react-redux\\\";\\nimport store from \\\"./store\\\";\\nimport showResults from \\\"./showResults\\\";\\nimport Form from \\\"./Form\\\";\\n\\nReactDOM.render(\\n    <Provider store = {store}>\\n        <div style = {{ padding: 15}}>\\n            <h2>Simple Form</h2>\\n            <Form onSubmit = {showResults} />\\n        </div>\\n    </Provider>,\\n    document.getElementById(\\\"root\\\")\\n);\",\"import * as React from 'react';\\nimport { Field, reduxForm } from 'redux-form';\\n\\nconst validate = (values: any) => {\\n    const errors = {\\n        name: '',\\n        email: ''\\n    }\\n    if(!values.name) {\\n        errors.name = 'Required'\\n    } else if(values.name.length > 15) {\\n        errors.name = 'Must be 15 charactors or less'\\n    }\\n    if(!values.email) {\\n        errors.email = 'Required'\\n    } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}$/i.test(values.email)) {\\n        errors.email = 'Invalid email address'\\n    }\\n    return errors\\n}\\n\\nconst warn = (values: any) => {\\n    const warnings = {\\n        username: ''\\n    }\\n    if(values.username.length > 10) {\\n        warnings.username = 'May be too long for you to remember'\\n    }\\n    return warnings\\n}\\n\\nconst renderField = (field: any) => (\\n    <div>\\n        <label>{field.label}</label>\\n        <div>\\n            <input {...field.input} placeholder = {field.label} type = {field.type} />\\n            {field.meta.touched && ((field.meta.error && <span>{field.meta.error}</span>) || (field.meta.warning && <span>{field.meta.warning}</span>))}\\n        </div>\\n    </div>\\n)\\n\\nconst Form = (props: any) => {\\n    const { handleSubmit, pristine, reset, submitting } = props;\\n    return(\\n        <form onSubmit = {handleSubmit}>\\n            <div>\\n                <Field name = \\\"name\\\" component = {renderField} type = \\\"text\\\" label = \\\"Name\\\" />\\n                <Field name = \\\"email\\\" component = {renderField} type = \\\"email\\\" label = \\\"Email\\\" />\\n            </div>\\n            <div>\\n                <button type = \\\"submit\\\" disabled = {submitting}>Submit</button>\\n                <button type = \\\"button\\\" disabled = {pristine || submitting} onClick = {reset}>Clear Values</button>\\n            </div>\\n        </form>\\n    )\\n}\\n\\nexport default reduxForm({\\n    form: 'test',\\n    validate,\\n    warn\\n})(Form);\"]}","code":"webpackHotUpdate(0,{47:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const l=n(1),a=n(49),r=n(5),m=n(56),i=n(57),u=n(58);a.render(l.createElement(r.Provider,{store:m.default},l.createElement(\"div\",{style:{padding:15}},l.createElement(\"h2\",null,\"Simple Form\"),l.createElement(u.default,{onSubmit:i.default}))),document.getElementById(\"root\"))},58:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const l=n(1),a=n(19),r=e=>l.createElement(\"div\",null,l.createElement(\"label\",null,e.label),l.createElement(\"div\",null,l.createElement(\"input\",Object.assign({},e.input,{placeholder:e.label,type:e.type})),e.meta.touched&&(e.meta.error&&l.createElement(\"span\",null,e.meta.error)||e.meta.warning&&l.createElement(\"span\",null,e.meta.warning))));t.default=a.reduxForm({form:\"test\",validate:e=>{const t={name:\"\",email:\"\"};return e.name?e.name.length>15&&(t.name=\"Must be 15 charactors or less\"):t.name=\"Required\",e.email?/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(e.email)||(t.email=\"Invalid email address\"):t.email=\"Required\",t},warn:e=>{const t={username:\"\"};return e.username.length>10&&(t.username=\"May be too long for you to remember\"),t}})(e=>{const{handleSubmit:t,pristine:n,reset:m,submitting:i}=e;return l.createElement(\"form\",{onSubmit:t},l.createElement(\"div\",null,l.createElement(a.Field,{name:\"name\",component:r,type:\"text\",label:\"Name\"}),l.createElement(a.Field,{name:\"email\",component:r,type:\"email\",label:\"Email\"})),l.createElement(\"div\",null,l.createElement(\"button\",{type:\"submit\",disabled:i},\"Submit\"),l.createElement(\"button\",{type:\"button\",disabled:n||i,onClick:m},\"Clear Values\")))})}});","extractedComments":[]}