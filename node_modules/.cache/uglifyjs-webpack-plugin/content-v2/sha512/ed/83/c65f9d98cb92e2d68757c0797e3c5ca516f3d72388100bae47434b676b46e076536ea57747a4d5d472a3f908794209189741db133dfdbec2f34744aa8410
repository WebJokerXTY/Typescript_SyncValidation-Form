{"map":"{\"version\":3,\"sources\":[\"/home/tianyu/tsprogram/src/Form.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"redux_form_1\",\"renderField\",\"field\",\"createElement\",\"label\",\"Object\",\"assign\",\"input\",\"placeholder\",\"type\",\"meta\",\"touched\",\"error\",\"warning\",\"exports\",\"default\",\"reduxForm\",\"form\",\"validate\",\"values\",\"errors\",\"username\",\"email\",\"test\",\"props\",\"handleSubmit\",\"pristine\",\"reset\",\"submitting\",\"onSubmit\",\"Field\",\"name\",\"component\",\"disabled\",\"onClick\"],\"mappings\":\"qGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,IA8BME,EAAeC,GACjBJ,EAAAK,cAAA,MAAA,KACIL,EAAAK,cAAA,QAAA,KAAQD,EAAME,OACdN,EAAAK,cAAA,MAAA,KACIL,EAAAK,cAAA,QAAAE,OAAAC,UAAWJ,EAAMK,OAAOC,YAAeN,EAAME,MAAOK,KAAQP,EAAMO,QACjEP,EAAMQ,KAAKC,UAAaT,EAAMQ,KAAKE,OAASd,EAAAK,cAAA,OAAA,KAAOD,EAAMQ,KAAKE,QAAmBV,EAAMQ,KAAKG,SAAWf,EAAAK,cAAA,OAAA,KAAOD,EAAMQ,KAAKG,YAmBtIC,EAAAC,QAAef,EAAAgB,WACXC,KAAM,OACNC,SAtDcC,IACd,MAAMC,GACFC,SAAU,GACVC,MAAO,IAYX,OAVIH,EAAOE,WACPD,EAAOC,SAAW,YAIlBF,EAAOG,MAEA,4CAA4CC,KAAKJ,EAAOG,SAC/DF,EAAOE,MAAQ,yBAFfF,EAAOE,MAAQ,WAIZF,IAqCIpB,CAdDwB,IACV,MAAMC,aAAEA,EAAYC,SAAEA,EAAQC,MAAEA,EAAKC,WAAEA,GAAeJ,EACtD,OACI1B,EAAAK,cAAA,QAAM0B,SAAYJ,GACd3B,EAAAK,cAACH,EAAA8B,OAAMC,KAAO,OAAOC,UAAa/B,EAAaQ,KAAO,OAAOL,MAAQ,SACrEN,EAAAK,cAACH,EAAA8B,OAAMC,KAAO,QAAQC,UAAa/B,EAAaQ,KAAO,QAAQL,MAAQ,UACvEN,EAAAK,cAAA,MAAA,KACIL,EAAAK,cAAA,UAAQM,KAAO,SAASwB,SAAYL,GAAU,UAC9C9B,EAAAK,cAAA,UAAQM,KAAO,SAASwB,SAAYP,GAAYE,EAAYM,QAAWP,GAAK\",\"sourcesContent\":[\"import * as React from 'react';\\nimport { Field, reduxForm } from 'redux-form';\\n\\nconst validate = (values: any) => {\\n    const errors = {\\n        username: '',\\n        email: ''\\n    }\\n    if(!values.username) {\\n        errors.username = 'Required'\\n    } /*else if(values.username.length > 15) {\\n        errors.username = 'Must be 15 charactors or less'\\n    }*/\\n    if(!values.email) {\\n        errors.email = 'Required'\\n    } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}$/i.test(values.email)) {\\n        errors.email = 'Invalid email address'\\n    }\\n    return errors\\n}\\n/*\\nconst warn = (values: any) => {\\n    const warnings = {\\n        username: ''\\n    }\\n    if(values.username.length > 10) {\\n        warnings.username = 'May be too long for you to remember'\\n    }\\n    return warnings\\n}\\n*/\\nconst renderField = (field: any) => (\\n    <div>\\n        <label>{field.label}</label>\\n        <div>\\n            <input {...field.input} placeholder = {field.label} type = {field.type} />\\n            {field.meta.touched && ((field.meta.error && <span>{field.meta.error}</span>) || (field.meta.warning && <span>{field.meta.warning}</span>))}\\n        </div>\\n    </div>\\n)\\n\\nconst Form = (props: any) => {\\n    const { handleSubmit, pristine, reset, submitting } = props;\\n    return(\\n        <form onSubmit = {handleSubmit}>\\n            <Field name = \\\"name\\\" component = {renderField} type = \\\"text\\\" label = \\\"Name\\\" />\\n            <Field name = \\\"email\\\" component = {renderField} type = \\\"email\\\" label = \\\"Email\\\" />\\n            <div>\\n                <button type = \\\"submit\\\" disabled = {submitting}>Submit</button>\\n                <button type = \\\"button\\\" disabled = {pristine || submitting} onClick = {reset}>Clear Values</button>\\n            </div>\\n        </form>\\n    )\\n}\\n\\nexport default reduxForm({\\n    form: 'test',\\n    validate,\\n    //warn\\n})(Form);\"]}","code":"webpackHotUpdate(0,{58:function(e,t,l){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=l(1),n=l(19),m=e=>a.createElement(\"div\",null,a.createElement(\"label\",null,e.label),a.createElement(\"div\",null,a.createElement(\"input\",Object.assign({},e.input,{placeholder:e.label,type:e.type})),e.meta.touched&&(e.meta.error&&a.createElement(\"span\",null,e.meta.error)||e.meta.warning&&a.createElement(\"span\",null,e.meta.warning))));t.default=n.reduxForm({form:\"test\",validate:e=>{const t={username:\"\",email:\"\"};return e.username||(t.username=\"Required\"),e.email?/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(e.email)||(t.email=\"Invalid email address\"):t.email=\"Required\",t}})(e=>{const{handleSubmit:t,pristine:l,reset:r,submitting:i}=e;return a.createElement(\"form\",{onSubmit:t},a.createElement(n.Field,{name:\"name\",component:m,type:\"text\",label:\"Name\"}),a.createElement(n.Field,{name:\"email\",component:m,type:\"email\",label:\"Email\"}),a.createElement(\"div\",null,a.createElement(\"button\",{type:\"submit\",disabled:i},\"Submit\"),a.createElement(\"button\",{type:\"button\",disabled:l||i,onClick:r},\"Clear Values\")))})}});","extractedComments":[]}