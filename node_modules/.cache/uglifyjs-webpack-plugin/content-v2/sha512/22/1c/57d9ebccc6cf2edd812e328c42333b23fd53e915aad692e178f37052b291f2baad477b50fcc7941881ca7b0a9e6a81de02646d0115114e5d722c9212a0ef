{"map":"{\"version\":3,\"sources\":[\"/home/tianyu/tsprogram/src/Form.tsx\",\"/home/tianyu/tsprogram/src/validate.ts\"],\"names\":[\"React\",\"__webpack_require__\",\"material_ui_1\",\"core_1\",\"redux_form_1\",\"validate_1\",\"renderField\",\"field\",\"createElement\",\"TextField\",\"Object\",\"assign\",\"hintText\",\"label\",\"floatingLabelText\",\"errorText\",\"meta\",\"touched\",\"error\",\"warnText\",\"warn\",\"input\",\"custom\",\"exports\",\"Form\",\"reduxForm\",\"form\",\"validate\",\"Component\",\"[object Object]\",\"handleSubmit\",\"pristine\",\"reset\",\"submitting\",\"this\",\"props\",\"onSubmit\",\"Field\",\"name\",\"component\",\"Button\",\"type\",\"disabled\",\"onClick\",\"values\",\"errors\",\"email\",\"length\",\"test\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAAJ,EAAA,KAGMK,EAAcC,GAChBP,EAAAQ,cAACN,EAAAO,UAASC,OAAAC,QACNC,SAAYL,EAAMM,MAClBC,kBAAqBP,EAAMM,MAC3BE,UAAaR,EAAMS,KAAKC,SAAWV,EAAMS,KAAKE,MAC9CC,SAAYZ,EAAMS,KAAKC,SAAWV,EAAMS,KAAKI,MACzCb,EAAMc,MACNd,EAAMe,SAwBLC,EAAAC,KAAOpB,EAAAqB,WAChBC,KAAM,OACNC,SAAAtB,EAAAsB,UAFgBvB,eApBQJ,EAAM4B,UAC9BC,SACI,MAAMC,aAAEA,EAAYC,SAAEA,EAAQC,MAAEA,EAAKC,WAAEA,GAAeC,KAAKC,MAC3D,OACInC,EAAAQ,cAAA,QAAM4B,SAAYN,GACd9B,EAAAQ,cAAA,MAAA,KACIR,EAAAQ,cAACJ,EAAAiC,OAAMC,KAAO,OAAOC,UAAajC,EAAaO,MAAQ,UAE3Db,EAAAQ,cAAA,MAAA,KACIR,EAAAQ,cAACJ,EAAAiC,OAAMC,KAAO,QAAQC,UAAajC,EAAaO,MAAQ,WAE5Db,EAAAQ,cAAA,MAAA,KACIR,EAAAQ,cAACL,EAAAqC,QAAOC,KAAO,SAASC,SAAYT,GAAU,UAC9CjC,EAAAQ,cAACL,EAAAqC,QAAOC,KAAO,SAASC,SAAYX,GAAYE,EAAYU,QAAWX,GAAK,wGC7BhGT,EAAAI,SAAA,SAAyBiB,GACrB,MAAMC,GACFP,KAAM,GACNQ,MAAO,IAYX,OAVIF,EAAON,KAEDM,EAAON,KAAKS,OAAS,KAC3BF,EAAOP,KAAO,iCAFdO,EAAOP,KAAO,WAIdM,EAAOE,MAEA,4CAA4CE,KAAKJ,EAAOE,SAC/DD,EAAOC,MAAQ,yBAFfD,EAAOC,MAAQ,WAIZD\",\"sourcesContent\":[\"import * as React from 'react';\\nimport { TextField } from 'material-ui';\\nimport { Button } from '@material-ui/core';\\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\\nimport { validate } from './validate'\\nimport { FormData } from './FormData'\\n\\nconst renderField= (field: any) => (\\n    <TextField\\n        hintText = {field.label}\\n        floatingLabelText = {field.label}\\n        errorText = {field.meta.touched && field.meta.error}\\n        warnText = {field.meta.touched && field.meta.warn}\\n        {...field.input}\\n        {...field.custom}\\n    />\\n)\\n\\nclass FormComponent extends React.Component<InjectedFormProps<FormData, {}, string>, any> {\\n    render() {\\n        const { handleSubmit, pristine, reset, submitting } = this.props;\\n        return(\\n            <form onSubmit = {handleSubmit}>\\n                <div>\\n                    <Field name = \\\"name\\\" component = {renderField} label = \\\"Name\\\" />\\n                </div>\\n                <div>\\n                    <Field name = \\\"email\\\" component = {renderField} label = \\\"Email\\\" />\\n                </div>\\n                <div>\\n                    <Button type = \\\"submit\\\" disabled = {submitting}>Submit</Button>\\n                    <Button type = \\\"button\\\" disabled = {pristine || submitting} onClick = {reset}>Clear Values</Button>\\n                </div>\\n            </form>\\n        )\\n    }\\n}\\n\\nexport const Form = reduxForm({\\n    form: 'test',\\n    validate\\n})(FormComponent);\",\"import { FormData } from './FormData'\\n\\nexport function validate(values: FormData) {\\n    const errors = {\\n        name: '',\\n        email: ''\\n    }\\n    if(!values.name) {\\n        errors.name = 'Required'\\n    } else if(values.name.length > 15) {\\n        errors.name = 'Must be 15 charactors or less'\\n    }\\n    if(!values.email) {\\n        errors.email = 'Required'\\n    } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}$/i.test(values.email)) {\\n        errors.email = 'Invalid email address'\\n    }\\n    return errors;\\n}\"]}","code":"webpackHotUpdate(0,{498:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=a(1),l=a(499),i=a(608),r=a(385),m=a(818),o=e=>n.createElement(l.TextField,Object.assign({hintText:e.label,floatingLabelText:e.label,errorText:e.meta.touched&&e.meta.error,warnText:e.meta.touched&&e.meta.warn},e.input,e.custom));t.Form=r.reduxForm({form:\"test\",validate:m.validate})(class extends n.Component{render(){const{handleSubmit:e,pristine:t,reset:a,submitting:l}=this.props;return n.createElement(\"form\",{onSubmit:e},n.createElement(\"div\",null,n.createElement(r.Field,{name:\"name\",component:o,label:\"Name\"})),n.createElement(\"div\",null,n.createElement(r.Field,{name:\"email\",component:o,label:\"Email\"})),n.createElement(\"div\",null,n.createElement(i.Button,{type:\"submit\",disabled:l},\"Submit\"),n.createElement(i.Button,{type:\"button\",disabled:t||l,onClick:a},\"Clear Values\")))}})},818:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.validate=function(e){const t={name:\"\",email:\"\"};return e.name?e.name.length>15&&(t.name=\"Must be 15 charactors or less\"):t.name=\"Required\",e.email?/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(e.email)||(t.email=\"Invalid email address\"):t.email=\"Required\",t}}});","extractedComments":[]}