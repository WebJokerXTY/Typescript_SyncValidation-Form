{"map":"{\"version\":3,\"sources\":[\"/home/tianyu/tsprogram/src/Form.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"redux_form_1\",\"renderField\",\"field\",\"createElement\",\"label\",\"Object\",\"assign\",\"input\",\"placeholder\",\"type\",\"meta\",\"touched\",\"error\",\"warning\",\"exports\",\"Form\",\"reduxForm\",\"form\",\"validate\",\"values\",\"errors\",\"name\",\"email\",\"length\",\"test\",\"warn\",\"warnings\",\"Component\",\"[object Object]\",\"handleSubmit\",\"pristine\",\"reset\",\"submitting\",\"this\",\"props\",\"onSubmit\",\"Field\",\"component\",\"disabled\",\"onClick\"],\"mappings\":\"qGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,IAmCME,EAAcC,GAChBJ,EAAAK,cAAA,MAAA,KACIL,EAAAK,cAAA,QAAA,KAAQD,EAAME,OACdN,EAAAK,cAAA,MAAA,KACIL,EAAAK,cAAA,QAAAE,OAAAC,UAAWJ,EAAMK,OAAOC,YAAeN,EAAME,MAAOK,KAAQP,EAAMO,QACjEP,EAAMQ,KAAKC,UAAaT,EAAMQ,KAAKE,OAASd,EAAAK,cAAA,OAAA,KAAOD,EAAMQ,KAAKE,QAAmBV,EAAMQ,KAAKG,SAAWf,EAAAK,cAAA,OAAA,KAAOD,EAAMQ,KAAKG,YAuBzHC,EAAAC,KAAOf,EAAAgB,WAChBC,KAAM,OACNC,SA1DcC,IACd,MAAMC,GACFC,KAAM,GACNC,MAAO,IAYX,OAVIH,EAAOE,KAEDF,EAAOE,KAAKE,OAAS,KAC3BH,EAAOC,KAAO,iCAFdD,EAAOC,KAAO,WAIdF,EAAOG,MAEA,4CAA4CE,KAAKL,EAAOG,SAC/DF,EAAOE,MAAQ,yBAFfF,EAAOE,MAAQ,WAIZF,GA4CPK,KAzCUN,IACV,MAAMO,GACFL,KAAM,IAKV,OAHGF,EAAOE,MAAQF,EAAOE,KAAKE,OAAS,KACnCG,EAASL,KAAO,uCAEbK,IA+BS1B,eAlBQF,EAAM6B,UAC9BC,SACI,MAAMC,aAAEA,EAAYC,SAAEA,EAAQC,MAAEA,EAAKC,WAAEA,GAAeC,KAAKC,MAC3D,OACIpC,EAAAK,cAAA,QAAMgC,SAAYN,GACd/B,EAAAK,cAAA,MAAA,KACIL,EAAAK,cAACH,EAAAoC,OAAMf,KAAO,OAAOgB,UAAapC,EAAaQ,KAAO,OAAOL,MAAQ,SACrEN,EAAAK,cAACH,EAAAoC,OAAMf,KAAO,QAAQgB,UAAapC,EAAaQ,KAAO,QAAQL,MAAQ,WAE3EN,EAAAK,cAAA,MAAA,KACIL,EAAAK,cAAA,UAAQM,KAAO,SAAS6B,SAAYN,GAAU,UAC9ClC,EAAAK,cAAA,UAAQM,KAAO,SAAS6B,SAAYR,GAAYE,EAAYO,QAAWR,GAAK\",\"sourcesContent\":[\"import * as React from 'react';\\nimport { Field, InjectedFormProps, WrappedFieldProps, reduxForm } from 'redux-form';\\n\\nexport interface FormData {\\n    name: string;\\n    email: string;\\n}\\n\\nconst validate = (values: FormData) => {\\n    const errors = {\\n        name: '',\\n        email: ''\\n    }\\n    if(!values.name) {\\n        errors.name = 'Required'\\n    } else if(values.name.length > 15) {\\n        errors.name = 'Must be 15 charactors or less'\\n    }\\n    if(!values.email) {\\n        errors.email = 'Required'\\n    } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}$/i.test(values.email)) {\\n        errors.email = 'Invalid email address'\\n    }\\n    return errors\\n}\\n\\nconst warn = (values: FormData) => {\\n    const warnings = {\\n        name: ''\\n    }\\n    if(values.name && values.name.length > 10) {\\n        warnings.name = 'May be too long for you to remember'\\n    }\\n    return warnings\\n}\\n\\nconst renderField= (field: WrappedFieldProps & any) => (\\n    <div>\\n        <label>{field.label}</label>\\n        <div>\\n            <input {...field.input} placeholder = {field.label} type = {field.type} />\\n            {field.meta.touched && ((field.meta.error && <span>{field.meta.error}</span>) || (field.meta.warning && <span>{field.meta.warning}</span>))}\\n        </div>\\n    </div>\\n)\\n\\nclass FormComponent extends React.Component<InjectedFormProps<FormData, {}, string>, any> {\\n    render() {\\n        const { handleSubmit, pristine, reset, submitting } = this.props;\\n        return(\\n            <form onSubmit = {handleSubmit}>\\n                <div>\\n                    <Field name = \\\"name\\\" component = {renderField} type = \\\"text\\\" label = \\\"Name\\\" />\\n                    <Field name = \\\"email\\\" component = {renderField} type = \\\"email\\\" label = \\\"Email\\\" />\\n                </div>\\n                <div>\\n                    <button type = \\\"submit\\\" disabled = {submitting}>Submit</button>\\n                    <button type = \\\"button\\\" disabled = {pristine || submitting} onClick = {reset}>Clear Values</button>\\n                </div>\\n            </form>\\n        )\\n    }\\n}\\n\\nexport const Form = reduxForm({\\n    form: 'test',\\n    validate,\\n    warn\\n})(FormComponent);\"]}","code":"webpackHotUpdate(0,{58:function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const a=n(1),l=n(19),m=e=>a.createElement(\"div\",null,a.createElement(\"label\",null,e.label),a.createElement(\"div\",null,a.createElement(\"input\",Object.assign({},e.input,{placeholder:e.label,type:e.type})),e.meta.touched&&(e.meta.error&&a.createElement(\"span\",null,e.meta.error)||e.meta.warning&&a.createElement(\"span\",null,e.meta.warning))));t.Form=l.reduxForm({form:\"test\",validate:e=>{const t={name:\"\",email:\"\"};return e.name?e.name.length>15&&(t.name=\"Must be 15 charactors or less\"):t.name=\"Required\",e.email?/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(e.email)||(t.email=\"Invalid email address\"):t.email=\"Required\",t},warn:e=>{const t={name:\"\"};return e.name&&e.name.length>10&&(t.name=\"May be too long for you to remember\"),t}})(class extends a.Component{render(){const{handleSubmit:e,pristine:t,reset:n,submitting:r}=this.props;return a.createElement(\"form\",{onSubmit:e},a.createElement(\"div\",null,a.createElement(l.Field,{name:\"name\",component:m,type:\"text\",label:\"Name\"}),a.createElement(l.Field,{name:\"email\",component:m,type:\"email\",label:\"Email\"})),a.createElement(\"div\",null,a.createElement(\"button\",{type:\"submit\",disabled:r},\"Submit\"),a.createElement(\"button\",{type:\"button\",disabled:t||r,onClick:n},\"Clear Values\")))}})}});","extractedComments":[]}