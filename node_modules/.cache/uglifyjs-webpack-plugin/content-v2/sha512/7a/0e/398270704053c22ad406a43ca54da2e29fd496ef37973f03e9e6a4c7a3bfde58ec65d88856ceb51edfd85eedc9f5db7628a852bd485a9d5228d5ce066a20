{"map":"{\"version\":3,\"sources\":[\"/home/tianyu/tsprogram/src/Form.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"material_ui_1\",\"core_1\",\"redux_form_1\",\"renderField\",\"field\",\"createElement\",\"TextField\",\"Object\",\"assign\",\"hintText\",\"label\",\"floatingLabelText\",\"errorText\",\"meta\",\"touched\",\"error\",\"warnText\",\"warn\",\"input\",\"custom\",\"exports\",\"Form\",\"reduxForm\",\"form\",\"validate\",\"values\",\"errors\",\"name\",\"email\",\"length\",\"test\",\"Component\",\"[object Object]\",\"handleSubmit\",\"pristine\",\"reset\",\"submitting\",\"this\",\"props\",\"onSubmit\",\"Field\",\"component\",\"Button\",\"type\",\"disabled\",\"onClick\"],\"mappings\":\"sGAAA,MAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAH,EAAA,KAyBMI,EAAcC,GAChBN,EAAAO,cAACL,EAAAM,UAASC,OAAAC,QACNC,SAAYL,EAAMM,MAClBC,kBAAqBP,EAAMM,MAC3BE,UAAaR,EAAMS,KAAKC,SAAWV,EAAMS,KAAKE,MAC9CC,SAAYZ,EAAMS,KAAKC,SAAWV,EAAMS,KAAKI,MACzCb,EAAMc,MACNd,EAAMe,SAwBLC,EAAAC,KAAOnB,EAAAoB,WAChBC,KAAM,OACNC,SAnDcC,IACd,MAAMC,GACFC,KAAM,GACNC,MAAO,IAYX,OAVIH,EAAOE,KAEDF,EAAOE,KAAKE,OAAS,KAC3BH,EAAOC,KAAO,iCAFdD,EAAOC,KAAO,WAIdF,EAAOG,MAEA,4CAA4CE,KAAKL,EAAOG,SAC/DF,EAAOE,MAAQ,yBAFfF,EAAOE,MAAQ,WAIZF,IAkCSxB,eApBQJ,EAAMiC,UAC9BC,SACI,MAAMC,aAAEA,EAAYC,SAAEA,EAAQC,MAAEA,EAAKC,WAAEA,GAAeC,KAAKC,MAC3D,OACIxC,EAAAO,cAAA,QAAMkC,SAAYN,GACdnC,EAAAO,cAAA,MAAA,KACIP,EAAAO,cAACH,EAAAsC,OAAMb,KAAO,OAAOc,UAAatC,EAAaO,MAAQ,UAE3DZ,EAAAO,cAAA,MAAA,KACIP,EAAAO,cAACH,EAAAsC,OAAMb,KAAO,QAAQc,UAAatC,EAAaO,MAAQ,WAE5DZ,EAAAO,cAAA,MAAA,KACIP,EAAAO,cAACJ,EAAAyC,QAAOC,KAAO,SAASC,SAAYR,GAAU,UAC9CtC,EAAAO,cAACJ,EAAAyC,QAAOC,KAAO,SAASC,SAAYV,GAAYE,EAAYS,QAAWV,GAAK\",\"sourcesContent\":[\"import * as React from 'react';\\nimport { TextField } from 'material-ui';\\nimport { Button } from '@material-ui/core';\\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\\n\\nexport interface FormData {\\n    name: string;\\n    email: string;\\n}\\n\\nconst validate = (values: FormData) => {\\n    const errors = {\\n        name: '',\\n        email: ''\\n    }\\n    if(!values.name) {\\n        errors.name = 'Required'\\n    } else if(values.name.length > 15) {\\n        errors.name = 'Must be 15 charactors or less'\\n    }\\n    if(!values.email) {\\n        errors.email = 'Required'\\n    } else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}$/i.test(values.email)) {\\n        errors.email = 'Invalid email address'\\n    }\\n    return errors\\n}\\n\\nconst renderField= (field: any) => (\\n    <TextField\\n        hintText = {field.label}\\n        floatingLabelText = {field.label}\\n        errorText = {field.meta.touched && field.meta.error}\\n        warnText = {field.meta.touched && field.meta.warn}\\n        {...field.input}\\n        {...field.custom}\\n    />\\n)\\n\\nclass FormComponent extends React.Component<InjectedFormProps<FormData, {}, string>, any> {\\n    render() {\\n        const { handleSubmit, pristine, reset, submitting } = this.props;\\n        return(\\n            <form onSubmit = {handleSubmit}>\\n                <div>\\n                    <Field name = \\\"name\\\" component = {renderField} label = \\\"Name\\\" />\\n                </div>\\n                <div>\\n                    <Field name = \\\"email\\\" component = {renderField} label = \\\"Email\\\" />\\n                </div>\\n                <div>\\n                    <Button type = \\\"submit\\\" disabled = {submitting}>Submit</Button>\\n                    <Button type = \\\"button\\\" disabled = {pristine || submitting} onClick = {reset}>Clear Values</Button>\\n                </div>\\n            </form>\\n        )\\n    }\\n}\\n\\nexport const Form = reduxForm({\\n    form: 'test',\\n    validate,\\n})(FormComponent);\"]}","code":"webpackHotUpdate(0,{498:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});const n=a(1),l=a(499),m=a(608),r=a(385),i=e=>n.createElement(l.TextField,Object.assign({hintText:e.label,floatingLabelText:e.label,errorText:e.meta.touched&&e.meta.error,warnText:e.meta.touched&&e.meta.warn},e.input,e.custom));t.Form=r.reduxForm({form:\"test\",validate:e=>{const t={name:\"\",email:\"\"};return e.name?e.name.length>15&&(t.name=\"Must be 15 charactors or less\"):t.name=\"Required\",e.email?/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(e.email)||(t.email=\"Invalid email address\"):t.email=\"Required\",t}})(class extends n.Component{render(){const{handleSubmit:e,pristine:t,reset:a,submitting:l}=this.props;return n.createElement(\"form\",{onSubmit:e},n.createElement(\"div\",null,n.createElement(r.Field,{name:\"name\",component:i,label:\"Name\"})),n.createElement(\"div\",null,n.createElement(r.Field,{name:\"email\",component:i,label:\"Email\"})),n.createElement(\"div\",null,n.createElement(m.Button,{type:\"submit\",disabled:l},\"Submit\"),n.createElement(m.Button,{type:\"button\",disabled:t||l,onClick:a},\"Clear Values\")))}})}});","extractedComments":[]}